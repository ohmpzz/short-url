openapi: '3.0.2'
info:
  title: Short URL API
  description: |-
    Short URL API
  version: '1.0'
servers:
  - url: http://localhost:3000/v1
  - url: http://ohm.local/v1
tags:
  - name: short-url
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionId

security:
  - cookieAuth: []

paths:
  /short-url:
    get:
      tags:
        - short-url
      description: ''
      operationId: getAllShortUrlBySessionId
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: short-url/succeeded
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        long_url:
                          type: string
                          example: https://google.com
                        code:
                          type: string
                          example: asvsxx
        '404':
          description: not found

    post:
      tags:
        - short-url
      description: ''
      operationId: createShortUrl
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                long_url:
                  type: string
                  example: https://google.com
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: short-url/created
                  data:
                    type: object
                    properties:
                      long_url:
                        type: string
                        example: https://google.com
                      code:
                        type: string
                        example: asvsxx

        '400':
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - bad-request
                    example: bad-request
                  message:
                    type: string
                    example: must not empty body

  /short-url/{code}:
    get:
      tags:
        - short-url
      description: ''
      operationId: fetchShortUrlByCode
      parameters:
        - in: path
          name: code
          schema:
            type: string
          required: true
      responses:
        '200':
          description: succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: short-url/succeeded
                  data:
                    type: object
                    properties:
                      long_url:
                        type: string
                        example: https://google.com
                      code:
                        type: string
                        example: asvsxx
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: short-url/succeeded
                  message:
                    type: string
                    example: not found
    patch:
      tags:
        - short-url
      description: ''
      operationId: updateShortUrl
      parameters:
        - in: path
          name: code
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                long_url:
                  type: string
                  example: https://google.com
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: short-url/updated
                  data:
                    type: object
                    properties:
                      long_url:
                        type: string
                        example: https://google.com
                      code:
                        type: string
                        example: asvsxx

        '400':
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    enum:
                      - bad-request
                    example: bad-request
                  message:
                    type: string
                    example: must not empty body
        '404':
          description: not found
    delete:
      tags:
        - short-url
      description: ''
      operationId: deleteShortUrl
      parameters:
        - in: path
          name: code
          schema:
            type: string
          required: true
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: short-url/deleted
        '404':
          description: not found
